/**
    * For the correct positioning of the placeholder element, the dnd-list and
    * it's children must have position: relative
    */
.gallery ul[dnd-list],
.gallery ul[dnd-list] > li {
    position: relative;
}

.gallery{
    height: 150px;
    width: 100%;
    position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.gallery ul[dnd-list] {
    min-height: 100px;
    padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.gallery ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.gallery ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: $lighterGray;
    min-width: 50px;
    min-height: 50px;
    border:dashed 0.2em $lightGray;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.gallery ul[dnd-list] li {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    margin-bottom: -1px;
    float:left;
    display: block;
    width: 120px;
    height:100px;
    cursor: move;
    text-align: center;
    padding-top:5px;
    margin: 2px;
}

/**
 * Show selected elements in green
 */
.gallery ul[dnd-list] li.selected {
    background-color: #297eb8;
    color: #fff;
}

.panel-heading{
    width:100%;
}

.container-gallery{
    background: #ddd;
    padding: 5px;
}